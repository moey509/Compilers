# Common Subexpression Elimination (3)
# This program does either O(n) steps if there is CSE, or O(5^n) steps without CSE);

fun build(n : Integer) : String
	if (n <= 0)
	 	return "";
	else
		return string(" "++build(n-1));
		
fun remove(s : String) : String {
	r := "";
	b := false;
	for (c in s)
		if ( b )
			r := string(r++[c]);
		else
			b := true;
	return r;
}

fun empty(s : String) : String {
	for (c in remove(s)) {
		a := empty(remove(s));
		b := empty(remove(s));
		return string(a++b);
	}
	return "";
}

for (c in empty(build(1000)))
	return ["No"];
return ["Yes"];