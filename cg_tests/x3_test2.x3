# Cubex Compiler Test 2 - Stage 2

fun safeDiv( l : Integer, r : Integer, d : Integer) : Integer
{
	m := l/r;
	for(i in m)
	{
		return i;
	}
	return d;
}

fun safeModulo(l : Integer, r : Integer, d : Integer) : Integer
{
	m := l%r;
	for(i in m)
	{
		return i;
	}
	return d;
}

fun intToStr(i : Integer) : String
{
	pref := "";
	if (i<0)
	{
		pref := "-";
		i := i * -1;
	}
	ret := [character(48+safeModulo(i,10,0))];
	i := safeDiv(i,10,0);
	while(i>0)
	{
		ret := [character(48+safeModulo(i,10,0))] ++ ret;
		i := safeDiv(i,10,0);
	}
	return string(pref ++ ret);
}
blahblahblah := 1;
for(i in (1..5) ++ [6])
   return [intToStr(i)];

return ["nope"];